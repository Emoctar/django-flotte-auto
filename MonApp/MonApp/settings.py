"""
Django settings for MonApp project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path,os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-*ykwsv-+lgvgh^r6o5)0&way!97=^#)k=iij@%i4rtbs8dd_v="

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []



# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'flotte_auto',
    'usersapp',
    'sql_server.pyodbc',
    
    
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "MonApp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR,'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                # 'flotte_auto.context_processors.user_photo',  # Remplacez "votre_application" par le nom de votre application
            ],
        },
    },
]

WSGI_APPLICATION = "MonApp.wsgi.application"
# Utilisez Channels comme backend pour ASGI
ASGI_APPLICATION = 'MonApp.routing.application'
#Authentification





# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'flotte_auto',
#         'USER': 'admin',
#         'PASSWORD': 'Redefere72',
#         'HOST': 'localhost',  # ou l'adresse de votre serveur PostgreSQL
#         'PORT': '5432',  # Laissez vide pour utiliser le port par défaut (5432)
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': 'flotte_auto',
        'USER': 'admin',
        'PASSWORD': 'Redefere72',
        'HOST': 'MOCTAR\EMD_SERVER',  # Remplacez par le nom ou l'adresse IP de votre serveur SQL Server
        'PORT': '',           # Laissez vide pour utiliser le port par défaut (généralement 1433)
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',  # Remplacez 'xx' par la version de votre pilote
        },
    }
    
}




CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",  # Adresse du serveur Redis
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]





# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "fr-fr"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

import redis

# Configuration de Celery
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Exemple avec Redis
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'  # Exemple avec Redis
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# Configuration de Celery Beat
from celery.schedules import crontab
CELERY_BEAT_SCHEDULE = {
    'mettre-a-jour-statut-vehicules': {
        'task': 'flotte_auto.tasks.mettre_a_jour_statut_vehicules_task',
        'schedule': crontab(hour=0, minute=0),  # Exécutez tous les jours à minuit
    },
}
CELERY_BEAT_SCHEDULE = {
    'notifier-entretien-planifie': {
        'task': 'flotte_auto.tasks.notifier_entretien_planifie',
        'schedule': crontab(hour=8, minute=0),  # Exécutez tous les jours à 8h00
    },
}


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'home'

# LOGOUT_REDIRECT_URL= 'login'

# simuler l’envoi d’e-mail de réinitialisation de mot de passe sur console.
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587  # Port SMTP de Gmail
EMAIL_USE_TLS = True  # Utilisez TLS pour la sécurité
EMAIL_HOST_USER = 'moctardiallo1916@gmail.com'  # Votre adresse e-mail Gmail
EMAIL_HOST_PASSWORD = 'nqwswjgtsbxsbudb'  # Votre mot de passe Gmail ou un jeton d'application si vous avez activé l'authentification à deux facteurs


# Paramètres pour le compte d'administration (utilisé pour la création de comptes)
ADMIN_EMAIL_HOST = 'smtp.gmail.com'
ADMIN_EMAIL_PORT = 587
ADMIN_EMAIL_USE_TLS = True
ADMIN_EMAIL_HOST_USER = 'a.myfleet03@gmail.com'  # Remplacez par l'adresse e-mail d'administration
ADMIN_EMAIL_HOST_PASSWORD = 'srggwnaegjbgvdme'  # Remplacez par le mot de passe d'administration


#######################################
#API NOTIFICATION TWILIO

VONAGE_API_KEY = 'beef8cb1'
VONAGE_API_SECRET = 'rlGAZHXoE2O3fivE'
VONAGE_PHONE_NUMBER = '+221781397254'



